import sys, pygame
pygame.init()

size = width, height = 320, 240
speed = [2, 2]
black = 0, 0, 0

screen = pygame.display.set_mode(size)

colors = {
"00000000": (124,124,124),
"00000001": (0,0,252),
"00000010": (0,0,188),
"00000011": (68,40,188),
"00000100": (148,0,132),
"00000101": (168,0,32),
"00000110": (168,16,0),
"00000111": (136,20,0),
"00001000": (80,48,0),
"00001001": (0,120,0),
"00001010": (0,104,0),
"00001011": (0,88,0),
"00001100": (0,64,88),
"00001101": (0,0,0),
"00001110": (0,0,0),
"00001111": (0,0,0),
"00010000": (188,188,188),
"00010001": (0,120,248),
"00010010": (0,88,248),
"00010011": (104,68,252),
"00010100": (216,0,204),
"00010101": (228,0,88),
"00010110": (248,56,0),
"00010111": (228,92,16),
"00011000": (172,124,0),
"00011001": (0,184,0),
"00011010": (0,168,0),
"00011011": (0,168,68),
"00011100": (0,136,136),
"00011101": (0,0,0),
"00011110": (0,0,0),
"00011111": (0,0,0),
"00100000": (248,248,248),
"00100001": (60,188,252),
"00100010": (104,136,252),
"00100011": (152,120,248),
"00100100": (248,120,248),
"00100101": (248,88,152),
"00100110": (248,120,88),
"00100111": (252,160,68),
"00101000": (248,184,0),
"00101001": (184,248,24),
"00101010": (88,216,84),
"00101011": (88,248,152),
"00101100": (0,232,216),
"00101101": (120,120,120),
"00101110": (0,0,0),
"00101111": (0,0,0),
"00110000": (252,252,252),
"00110001": (164,228,252),
"00110010": (184,184,248),
"00110011": (216,184,248),
"00110100": (248,184,248),
"00110101": (248,164,192),
"00110110": (240,208,176),
"00110111": (252,224,168),
"00111000": (248,216,120),
"00111001": (216,248,120),
"00111010": (184,248,184),
"00111011": (184,248,216),
"00111100": (0,252,252),
"00111101": (248,216,248),
"00111110": (0,0,0),
"00111111": (0,0,0)
}

def build_image(screen, pixels, cur_x_offset, cur_y_offset):
    default_size = 3
    x_offset = 7 * cur_x_offset * default_size
    y_offset = 7 * cur_y_offset * default_size

    cur_pixel = 0

    for y in range(0, 7):
        for x in range(0, 7):
            pygame.draw.rect(screen, colors[pixels[cur_pixel]], (x_offset, y_offset, default_size, default_size))
            x_offset = x_offset + default_size
            cur_pixel = cur_pixel + 1
        x_offset = 7 * cur_x_offset * default_size
        y_offset = y_offset + default_size

def build_color_array(payload):
    pixel_arr = []
    for b in payload:
        pixel_arr.append(colors[b])
    return pixel_arr

def build_sprite(screen, sprites):
    cur_offset = 0

    for s in sprites:
        if (cur_offset == 0):
            build_image(screen, s, 0, 0)
        elif (cur_offset == 1):
            build_image(screen, s, 1, 0)
        elif (cur_offset == 2):
            build_image(screen, s, 0, 1)
        else:
            build_image(screen, s, 1, 1)
        cur_offset = cur_offset + 1

    pygame.display.update()


pixels = [
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
    "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100", "00000100",
]

pixels_2 = [
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
    "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100", "00011100",
]

pixels_3 = [
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
    "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100", "00101100",
]

pixels_4 = [
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
    "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101", "00111101",
]

sprites = [pixels, pixels_2, pixels_3, pixels_4]

pixel_arr = build_color_array(pixels)

while 1:
    for event in pygame.event.get():
        if event.type == pygame.QUIT: sys.exit()
    #
    # ballrect = ballrect.move(speed)
    # if ballrect.left < 0 or ballrect.right > width:
    #     speed[0] = -speed[0]
    # if ballrect.top < 0 or ballrect.bottom > height:
    #     speed[1] = -speed[1]

    screen.fill(black)
    # screen.blit(ball, ballrect)
    pygame.display.flip()

    build_sprite(screen, sprites)
